/**
 * Generated by com.splwg.tools.artifactgen.ArtifactGenerator
 * Template: LookupGen.vm
 * $File: //FW/4.0.1/Code/modules/tools/source/java/com/splwg/tools/artifactgen/templates/LookupGen.vm $
 * $DateTime: 2009/12/17 11:38:59 $
 * $Revision: #1 $
 */
package com.splwg.cm.api.lookup;

import com.splwg.base.support.impl.AbstractComponentLookup;

/**
 * UsStatesLookup_Gen is a generated implementation class for the lookup field US_STATE_FLG
 *
 * @author Generated by splDev.artifactGenerator
 */
public  class UsStatesLookup_Gen
    extends AbstractComponentLookup
           <UsStatesLookup>
     {

    /**
      * @return field name this class represents
      */
    @Override
    public String fieldName() {
        return "US_STATE_FLG                  ";
    }
    /* helper tester methods */
    /**
      * @return true if this Lookup represents the lookup value micronesia
      */
    public boolean isMicronesia() {
        return getLookup().equals(UsStatesLookup.constants.MICRONESIA);
    }
    /**
      * @return true if this Lookup represents the lookup value newYork
      */
    public boolean isNewYork() {
        return getLookup().equals(UsStatesLookup.constants.NEW_YORK);
    }
    /**
      * @return true if this Lookup represents the lookup value southDakota
      */
    public boolean isSouthDakota() {
        return getLookup().equals(UsStatesLookup.constants.SOUTH_DAKOTA);
    }
    /**
      * @return true if this Lookup represents the lookup value texas
      */
    public boolean isTexas() {
        return getLookup().equals(UsStatesLookup.constants.TEXAS);
    }
    /**
      * @return true if this Lookup represents the lookup value arizona
      */
    public boolean isArizona() {
        return getLookup().equals(UsStatesLookup.constants.ARIZONA);
    }
    /**
      * @return true if this Lookup represents the lookup value nebraska
      */
    public boolean isNebraska() {
        return getLookup().equals(UsStatesLookup.constants.NEBRASKA);
    }
    /**
      * @return true if this Lookup represents the lookup value northCarolina
      */
    public boolean isNorthCarolina() {
        return getLookup().equals(UsStatesLookup.constants.NORTH_CAROLINA);
    }
    /**
      * @return true if this Lookup represents the lookup value puertoRico
      */
    public boolean isPuertoRico() {
        return getLookup().equals(UsStatesLookup.constants.PUERTO_RICO);
    }
    /**
      * @return true if this Lookup represents the lookup value rhodeIsland
      */
    public boolean isRhodeIsland() {
        return getLookup().equals(UsStatesLookup.constants.RHODE_ISLAND);
    }
    /**
      * @return true if this Lookup represents the lookup value newMexico
      */
    public boolean isNewMexico() {
        return getLookup().equals(UsStatesLookup.constants.NEW_MEXICO);
    }
    /**
      * @return true if this Lookup represents the lookup value tennessee
      */
    public boolean isTennessee() {
        return getLookup().equals(UsStatesLookup.constants.TENNESSEE);
    }
    /**
      * @return true if this Lookup represents the lookup value kansas
      */
    public boolean isKansas() {
        return getLookup().equals(UsStatesLookup.constants.KANSAS);
    }
    /**
      * @return true if this Lookup represents the lookup value indiana
      */
    public boolean isIndiana() {
        return getLookup().equals(UsStatesLookup.constants.INDIANA);
    }
    /**
      * @return true if this Lookup represents the lookup value montana
      */
    public boolean isMontana() {
        return getLookup().equals(UsStatesLookup.constants.MONTANA);
    }
    /**
      * @return true if this Lookup represents the lookup value virginIslands
      */
    public boolean isVirginIslands() {
        return getLookup().equals(UsStatesLookup.constants.VIRGIN_ISLANDS);
    }
    /**
      * @return true if this Lookup represents the lookup value alabama
      */
    public boolean isAlabama() {
        return getLookup().equals(UsStatesLookup.constants.ALABAMA);
    }
    /**
      * @return true if this Lookup represents the lookup value colorado
      */
    public boolean isColorado() {
        return getLookup().equals(UsStatesLookup.constants.COLORADO);
    }
    /**
      * @return true if this Lookup represents the lookup value guam
      */
    public boolean isGuam() {
        return getLookup().equals(UsStatesLookup.constants.GUAM);
    }
    /**
      * @return true if this Lookup represents the lookup value arkansas
      */
    public boolean isArkansas() {
        return getLookup().equals(UsStatesLookup.constants.ARKANSAS);
    }
    /**
      * @return true if this Lookup represents the lookup value virginia
      */
    public boolean isVirginia() {
        return getLookup().equals(UsStatesLookup.constants.VIRGINIA);
    }
    /**
      * @return true if this Lookup represents the lookup value kentucky
      */
    public boolean isKentucky() {
        return getLookup().equals(UsStatesLookup.constants.KENTUCKY);
    }
    /**
      * @return true if this Lookup represents the lookup value marshallIslands
      */
    public boolean isMarshallIslands() {
        return getLookup().equals(UsStatesLookup.constants.MARSHALL_ISLANDS);
    }
    /**
      * @return true if this Lookup represents the lookup value utah
      */
    public boolean isUtah() {
        return getLookup().equals(UsStatesLookup.constants.UTAH);
    }
    /**
      * @return true if this Lookup represents the lookup value idaho
      */
    public boolean isIdaho() {
        return getLookup().equals(UsStatesLookup.constants.IDAHO);
    }
    /**
      * @return true if this Lookup represents the lookup value georgia
      */
    public boolean isGeorgia() {
        return getLookup().equals(UsStatesLookup.constants.GEORGIA);
    }
    /**
      * @return true if this Lookup represents the lookup value maryland
      */
    public boolean isMaryland() {
        return getLookup().equals(UsStatesLookup.constants.MARYLAND);
    }
    /**
      * @return true if this Lookup represents the lookup value wyoming
      */
    public boolean isWyoming() {
        return getLookup().equals(UsStatesLookup.constants.WYOMING);
    }
    /**
      * @return true if this Lookup represents the lookup value marianaIslands
      */
    public boolean isMarianaIslands() {
        return getLookup().equals(UsStatesLookup.constants.MARIANA_ISLANDS);
    }
    /**
      * @return true if this Lookup represents the lookup value california
      */
    public boolean isCalifornia() {
        return getLookup().equals(UsStatesLookup.constants.CALIFORNIA);
    }
    /**
      * @return true if this Lookup represents the lookup value illinois
      */
    public boolean isIllinois() {
        return getLookup().equals(UsStatesLookup.constants.ILLINOIS);
    }
    /**
      * @return true if this Lookup represents the lookup value minnesota
      */
    public boolean isMinnesota() {
        return getLookup().equals(UsStatesLookup.constants.MINNESOTA);
    }
    /**
      * @return true if this Lookup represents the lookup value oklahoma
      */
    public boolean isOklahoma() {
        return getLookup().equals(UsStatesLookup.constants.OKLAHOMA);
    }
    /**
      * @return true if this Lookup represents the lookup value florida
      */
    public boolean isFlorida() {
        return getLookup().equals(UsStatesLookup.constants.FLORIDA);
    }
    /**
      * @return true if this Lookup represents the lookup value nevada
      */
    public boolean isNevada() {
        return getLookup().equals(UsStatesLookup.constants.NEVADA);
    }
    /**
      * @return true if this Lookup represents the lookup value palau
      */
    public boolean isPalau() {
        return getLookup().equals(UsStatesLookup.constants.PALAU);
    }
    /**
      * @return true if this Lookup represents the lookup value southCarolina
      */
    public boolean isSouthCarolina() {
        return getLookup().equals(UsStatesLookup.constants.SOUTH_CAROLINA);
    }
    /**
      * @return true if this Lookup represents the lookup value wisconsin
      */
    public boolean isWisconsin() {
        return getLookup().equals(UsStatesLookup.constants.WISCONSIN);
    }
    /**
      * @return true if this Lookup represents the lookup value washington
      */
    public boolean isWashington() {
        return getLookup().equals(UsStatesLookup.constants.WASHINGTON);
    }
    /**
      * @return true if this Lookup represents the lookup value newHampshire
      */
    public boolean isNewHampshire() {
        return getLookup().equals(UsStatesLookup.constants.NEW_HAMPSHIRE);
    }
    /**
      * @return true if this Lookup represents the lookup value vermont
      */
    public boolean isVermont() {
        return getLookup().equals(UsStatesLookup.constants.VERMONT);
    }
    /**
      * @return true if this Lookup represents the lookup value louisiana
      */
    public boolean isLouisiana() {
        return getLookup().equals(UsStatesLookup.constants.LOUISIANA);
    }
    /**
      * @return true if this Lookup represents the lookup value northDakota
      */
    public boolean isNorthDakota() {
        return getLookup().equals(UsStatesLookup.constants.NORTH_DAKOTA);
    }
    /**
      * @return true if this Lookup represents the lookup value washingtonDC
      */
    public boolean isWashingtonDC() {
        return getLookup().equals(UsStatesLookup.constants.WASHINGTON_D_C);
    }
    /**
      * @return true if this Lookup represents the lookup value hawaii
      */
    public boolean isHawaii() {
        return getLookup().equals(UsStatesLookup.constants.HAWAII);
    }
    /**
      * @return true if this Lookup represents the lookup value newJersey
      */
    public boolean isNewJersey() {
        return getLookup().equals(UsStatesLookup.constants.NEW_JERSEY);
    }
    /**
      * @return true if this Lookup represents the lookup value delaware
      */
    public boolean isDelaware() {
        return getLookup().equals(UsStatesLookup.constants.DELAWARE);
    }
    /**
      * @return true if this Lookup represents the lookup value mississippi
      */
    public boolean isMississippi() {
        return getLookup().equals(UsStatesLookup.constants.MISSISSIPPI);
    }
    /**
      * @return true if this Lookup represents the lookup value alaska
      */
    public boolean isAlaska() {
        return getLookup().equals(UsStatesLookup.constants.ALASKA);
    }
    /**
      * @return true if this Lookup represents the lookup value pennsylvania
      */
    public boolean isPennsylvania() {
        return getLookup().equals(UsStatesLookup.constants.PENNSYLVANIA);
    }
    /**
      * @return true if this Lookup represents the lookup value connecticut
      */
    public boolean isConnecticut() {
        return getLookup().equals(UsStatesLookup.constants.CONNECTICUT);
    }
    /**
      * @return true if this Lookup represents the lookup value americanSamoa
      */
    public boolean isAmericanSamoa() {
        return getLookup().equals(UsStatesLookup.constants.AMERICAN_SAMOA);
    }
    /**
      * @return true if this Lookup represents the lookup value iowa
      */
    public boolean isIowa() {
        return getLookup().equals(UsStatesLookup.constants.IOWA);
    }
    /**
      * @return true if this Lookup represents the lookup value westVirginia
      */
    public boolean isWestVirginia() {
        return getLookup().equals(UsStatesLookup.constants.WEST_VIRGINIA);
    }
    /**
      * @return true if this Lookup represents the lookup value maine
      */
    public boolean isMaine() {
        return getLookup().equals(UsStatesLookup.constants.MAINE);
    }
    /**
      * @return true if this Lookup represents the lookup value ohio
      */
    public boolean isOhio() {
        return getLookup().equals(UsStatesLookup.constants.OHIO);
    }
    /**
      * @return true if this Lookup represents the lookup value massachusetts
      */
    public boolean isMassachusetts() {
        return getLookup().equals(UsStatesLookup.constants.MASSACHUSETTS);
    }
    /**
      * @return true if this Lookup represents the lookup value missouri
      */
    public boolean isMissouri() {
        return getLookup().equals(UsStatesLookup.constants.MISSOURI);
    }
    /**
      * @return true if this Lookup represents the lookup value oregon
      */
    public boolean isOregon() {
        return getLookup().equals(UsStatesLookup.constants.OREGON);
    }
    /**
      * @return true if this Lookup represents the lookup value michigan
      */
    public boolean isMichigan() {
        return getLookup().equals(UsStatesLookup.constants.MICHIGAN);
    }
}