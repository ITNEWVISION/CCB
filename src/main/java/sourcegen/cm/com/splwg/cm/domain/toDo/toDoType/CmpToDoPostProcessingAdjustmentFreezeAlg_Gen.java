/**
 * Generated by com.splwg.tools.artifactgen.ArtifactGenerator
 * Template: AlgorithmComponentGenClass.vm
 * $File: //FW/4.0.1/Code/modules/tools/source/java/com/splwg/tools/artifactgen/templates/AlgorithmComponentGenClass.vm $
 * $DateTime: 2009/12/17 11:38:59 $
 * $Revision: #1 $
 */
package com.splwg.cm.domain.toDo.toDoType;

import com.splwg.base.support.algorithm.AbstractAlgorithmComponent;
import com.splwg.base.domain.common.characteristicType.CharacteristicType_Id;
import com.splwg.base.domain.common.characteristicType.CharacteristicType;

/**
  * Generated super class for the cmpToDoPostProcessingAdjustmentFreezeAlg algorithm component
  *
  * @author Generated by com.splwg.tools.artifactgen.ArtifactGenerator
  */
public abstract class CmpToDoPostProcessingAdjustmentFreezeAlg_Gen extends AbstractAlgorithmComponent
         implements CmpToDoPostProcessingAdjustmentFreezeAlg
{

    public final CharacteristicType getToDoTypeServiceAgreementCharacteristicType () {
        String idValue = getSoftParameter(0);
	        if (idValue == null) reportRequiredParameter("toDoTypeServiceAgreementCharacteristicType",0);
	        CharacteristicType_Id id = new CharacteristicType_Id(idValue);
        CharacteristicType toDoTypeServiceAgreementCharacteristicType = id.getEntity();
	        validateSoftEntityExists("toDoTypeServiceAgreementCharacteristicType",0 ,id, toDoTypeServiceAgreementCharacteristicType);
	        return toDoTypeServiceAgreementCharacteristicType;
    }

    protected final void validateParameterTypes() {
        getToDoTypeServiceAgreementCharacteristicType();

    }
   

}
