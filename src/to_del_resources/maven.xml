<project
default="reactor-exec"
xmlns:ant="jelly:ant"
xmlns:j="jelly:core"
xmlns:u="jelly:util"
xmlns:maven="jelly:maven">
<goal name="ccbdemo">
<echo message="Copying source files to build location for CM project"/>
<attainGoal name="refresh-build-dir" />
<!-- Generate and compile -->
<attainGoal name="cmGenerate" />
<attainGoal name="jar:jar" />
<copy todir="${build.dir}/repository/cm/jars" >
<fileset dir="${build.dir}/target">
<include name="*.jar"/>
</fileset>
</copy>
<!--Copy files for appserver refresh -->
<attainGoal name="save-files" />
</goal>
<goal name="refresh-build-dir">
<echo message="Refreshing build directory for project CM" />
<echo message="Source root directory is ${java.source.dir}" />
<delete dir="${build.dir}/source" />
<delete dir="${build.dir}/target" />
<!-- Copy over the "java" directories -->
<copy todir="${build.dir}/source/java" >
<fileset dir="${java.source.dir}" />
</copy>
<!-- Copy over the "test" directories -->
<copy todir="${build.dir}/source/test" failonerror="false" >
<fileset dir="${java.source.dir}/test" />
</copy>
<!-- Copy over the properties -->
<copy todir="${build.dir}/properties"
file="${web.root.dir}/WEB-INF/classes/hibernate.properties"
overwrite="true" failonerror="false" />
<copy todir="${build.dir}/properties"
file="${web.root.dir}/WEB-INF/classes/log4j.properties" overwrite="true"
failonerror="false" />
<copy todir="${build.dir}/properties"
file="${web.root.dir}/WEB-INF/classes/spl.properties" overwrite="true"
failonerror="false" />
<!-- Copy over the Test properties -->
<!-- Copy over the Test properties -->
<copy todir="${build.dir}/TestProperties"
file="${java.source.dir}/test/properties/hibernate.properties"
overwrite="true" failonerror="false" />
<copy todir="${build.dir}/TestProperties"
file="${java.source.dir}/test/properties/log4j.properties"
overwrite="true" failonerror="false" />
<copy todir="${build.dir}/TestProperties"
file="${java.source.dir}/test/properties/spl.properties"
overwrite="true" failonerror="false" />
<!-- Refresh the Cobol Runtime files -->
<delete dir="${build.dir}/runtime"/>
<copy todir="${build.dir}/runtime" preservelastmodified="true" >
<fileset dir="${dev.root.dir}/runtime ">
<include name="cm*.dll"/>
<include name="CM*.dll"/>
</fileset>
</copy>
</goal>
<goal name="cmGenerate">
<!-- Generate the classes -->
<property name="generated.artifact.dir"
value="${build.dir}/source/java"/>
<echo message="Generated artifact directory is ${generated.artifact.dir}" /
>
<java classname="com.splwg.tools.artifactgen.ArtifactGenerator" fork="true"
failonerror="true" maxmemory="512m">
<arg line="-appDirs ${generated.artifact.dir} -appJars ${build.dir}/
repository/cm-dep/jars/spl-base-2.0.10.jar ${build.dir}/repository/cm-dep/jars/
spl-ccb-2.0.5.jar" />
<classpath>
<pathelement path="${build.dir}/properties" />
<fileset dir="${build.dir}/repository/cm-dep/jars">
<include name="*.jar"/>
</fileset>
<fileset dir="${dev.root.dir}/SPLSDKCommon/tools">
<include name="*.jar"/>
</fileset>
</classpath>
<sysproperty key="spl.tools.artifact.manual.sourcedir"
value="${generated.artifact.dir}"/>
<sysproperty key="spl.tools.artifact.cobol.sourcedir"
value="${dev.root.dir}/cobol/source"/>
<sysproperty key="spl.tools.artifact.generated.sourcedir"
value="${generated.artifact.dir}"/>
<sysproperty key="spl.tools.loaded.applications" value="base,ccb,cm"/>
<sysproperty key="log4j.logger.com.splwg" value="info"/>
<sysproperty key="log4j.logger.org.hibernate.cfg" value="warn"/>
<sysproperty key="log4j.logger.org.hibernate.util" value="warn"/>
<sysproperty
key="log4j.logger.com.splwg.tools.artifactgen.LookupGenerator" value="warn"/>
<sysproperty
key="log4j.logger.com.splwg.tools.artifactgen.sourceparser.JavaSourceProcessor"
value="warn"/>
</java>
</goal>
<goal name="save-files">
<echo message="Deleting previous saved files..." />
<!-- Put a marker that files are in the process of being saved -->
<!-- so the appserver refresh won't try to refresh -->
<copy file="${dev.root.dir}/etc/SPLVERSION.txt" tofile="${build.dir}/
~saving_files"/>
<delete dir="${build.dir}/saved" />
<echo message="Saving files from successful build..." />
<!-- Copy over the root directory -->
<copy todir="${build.dir}/saved/root/cm">
<fileset dir="${web.root.dir}/cm" />
</copy>
<copy todir="${build.dir}/saved/lib" >
<fileset dir="${build.dir}/repository/cm/jars" />
</copy>
<!-- Copy over the dlls -->
<copy todir="${build.dir}/saved/runtime" >
<fileset dir="${build.dir}/runtime">
<include name="CM*.dll" />
<include name="cm*.dll" />
</fileset>
</copy>
<delete file="${build.dir}/~saving_files"/>
</goal>
</project>